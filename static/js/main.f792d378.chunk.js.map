{"version":3,"sources":["Components/cards.js","index.js"],"names":["Cards","props","pagination","page","pokemons","search","getTags","pokemon","xml","XMLHttpRequest","open","url","send","JSON","parse","responseText","types","map","tag","type","name","getImage","src","sprites","front_default","className","alt","cards","counter","tags","result","i","length","toLowerCase","indexOf","push","localStorage","keys","Object","getItem","sessionStorage","sort","forEach","pokeTags","item","setItem","stringify","slice","getCards","id","card","App","forceUpdate","useState","setValue","value","useForceUpdate","setPage","maxPage","Math","ceil","setSearch","setPagination","setTags","setPokemons","storage","setStorage","isActive","active","str","paginationChange","newPagination","count","useEffect","clear","allPokemons","pokemonsAPI","results","loadPokemons","allTags","tagsAPI","loadTags","onClick","e","document","getElementById","placeholder","splice","toggleTags","childProcess","require","oldSpawn","spawn","console","log","arguments","apply","this","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f792d378.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Cards(props) {\n\tconst pagination = props.pagination;\n\tconst page = props.page;\n\tconst pokemons = props.pokemons;\n\tconst search = props.search;\n\n\t//получаем карточки на вывод\n\tconst getCards = (search) => {\n\t\tlet tags = [];\n\t\tlet result = [];\n\t\tlet counter;\n\n\t\t// фильтр по имени\n\t\tif (search !== '') {\n\t\t\tfor (let i = 0; i < pokemons.length; i++) {\n\t\t\t\tif (pokemons[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\n\t\t\t\t\tresult.push(pokemons[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// вывод покемонов из прошлых поисков\n\t\telse if (localStorage.length > 0) {\n\t\t\tlet keys = Object.keys(localStorage);\n\t\t\tfor(let i in keys) {\n\t\t\t\tresult.push(JSON.parse(localStorage.getItem(i)));\n\t\t\t}\n\t\t}\n\n\t\t// фильтр по тегу\n\t\telse if (sessionStorage.length > 0) {\n\t\t\tlet keys = Object.keys(sessionStorage);\n\t\t\tfor(let i in keys) {\n\t\t\t\ttags[i] = JSON.parse(sessionStorage.getItem(i));\n\t\t\t}\n\t\t\ttags.sort();\n\t\t\tpokemons.forEach(pokemon => {\n\t\t\t\tlet pokeTags = getTags(pokemon);\n\t\t\t\tpokeTags.sort();\n\t\t\t\tcounter = 0;\n\t\t\t\tif (tags.length === pokeTags.length) {\n\t\t\t\t\tfor (let i = 0; i < tags.length; i++) {\n\t\t\t\t\t\tif (tags[i] === pokeTags[i]) {\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcounter = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (counter === tags.length) {\n\t\t\t\t\t\tresult.push(pokemon);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// вывод всех покемонов (если нет фильтров)\n\t\telse {\n\t\t\tresult = pokemons;\n\t\t}\n\n\t\t// сохранение результатов в localStorage (для быстрого перехода между страницам)\n\t\tif (localStorage.length === 0) {\n\t\t\tresult.forEach(item => {\n\t\t\t\tlocalStorage.setItem(localStorage.length, JSON.stringify(item));\n\t\t\t});\n\t\t}\n\n\t\treturn result.slice((page-1)*pagination, page*pagination);\n\t}\n\n\t//получаем тэги для нужного покемона\n\tconst getTags = (pokemon) => {\n\t\tlet xml = new XMLHttpRequest();\n\t\txml.open(\"GET\", pokemon.url, false);\n\t\txml.send(null);\n\n\t\tlet url = JSON.parse(xml.responseText);\n\n\t\tlet tagsStr = url.types.map((tag) => {return tag.type.name});\n\t\treturn tagsStr;\n\t}\n\n\t// получаем изображение нужного покемона\n\tconst getImage = (pokemon) => {\n\t\tlet xml = new XMLHttpRequest();\n\t\txml.open(\"GET\", pokemon.url, false);\n\t\txml.send(null);\n\n\t\tlet url = JSON.parse(xml.responseText);\n\n\t\treturn (<img src={url.sprites.front_default} className=\"pokemon-image\" alt=\"\"></img>)\n\t}\n\n\tconst cards = getCards(search);\n\n\t//вывод полученых карточек одной страницы\n\tif (cards.length === 0) {\n\t\treturn <h1>Not found</h1>;\n\t}\n\treturn (\n\t\t<ul id=\"card-field\">{cards.map(card => (\n\t\t\t<li className=\"card\" key={card.name} >\n\t\t\t\t<h5>{card.name}</h5>\n\t\t\t\t{getImage(card)}\n\t\t\t\t<div className=\"pokemon-tags\">\n\t\t\t\t\t<p className=\"pokemon-tag\">Type:</p>\n\t\t\t\t\t{getTags(card).map((tag) => {\n\t\t\t\t\t\treturn <span className={\"pokemon-tag \" + tag} key={tag}>{tag}</span>\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t))}</ul>\n\t)\n}\n\nexport default Cards;","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cards from './Components/cards.js';\nimport './Styles/cards.css';\nimport './Styles/header.css';\n\n(function() {\n    var childProcess = require(\"child_process\");\n    var oldSpawn = childProcess.spawn;\n    function mySpawn() {\n        console.log('spawn called');\n        console.log(arguments);\n        var result = oldSpawn.apply(this, arguments);\n        return result;\n    }\n    childProcess.spawn = mySpawn;\n})();\n\nfunction useForceUpdate(){\n\tconst [value, setValue] = useState(0);\n\tif (value === 0) {}\n\treturn () => setValue(value => value + 1);\n}\n\nfunction App() {\n\t// принудительное обновление состояния компонентов страницы\n\tconst forceUpdate = useForceUpdate();\n\n\t// номер текущей страницы\n\tconst [page, setPage] = useState(1);\n\tconst maxPage = () => {\n\t\treturn Math.ceil(localStorage.length / pagination);\n\t}\n\n\t// поле ввода поиска\n\tconst [search, setSearch] = useState('');\n\n\t// пагинация (10/20/50)\n\tconst [pagination, setPagination] = useState(10);\n\n\t// загрузка всех возможных тэгов\n\tconst [tags, setTags] = useState([]);\n\tconst loadTags = () => {\n\t\tlet xml = new XMLHttpRequest();\n\t\txml.open(\"GET\", 'https://pokeapi.co/api/v2/type/', false);\n\t\txml.send(null);\n\n\t\tlet allTags = [];\n\t\tlet tagsAPI = JSON.parse(xml.responseText).results;\n\n\t\tfor (let i = 0; i < tagsAPI.length; i++) {\n\t\t\tallTags.push(tagsAPI[i].name);\n\t\t}\n\t\tsetTags(allTags);\n\t}\n\n\t// загрузка всех возможных покемонов (1118шт)\n\tconst [pokemons, setPokemons] = useState([]);\n\tconst loadPokemons = () => {\n\t\tlet xml = new XMLHttpRequest();\n\n\t\txml.open(\"GET\", 'https://pokeapi.co/api/v2/pokemon?limit=1118&offset=0', false);\n\t\txml.send(null);\n\n\t\tlet allPokemons = [];\n\t\tlet pokemonsAPI = JSON.parse(xml.responseText).results;\n\n\t\tfor (let i = 0; i < pokemonsAPI.length; i++) {\n\t\t\tallPokemons.push(pokemonsAPI[i]);\n\t\t}\n\t\tsetPokemons(allPokemons)\n\t}\n\n\tconst [storage, setStorage] = useState([]);\n\n\t// добавление/удаление тегов для поиска\n\tconst toggleTags = (tag) => {\n\t\tlet str = storage;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tif (str[i] === tag) {\n\t\t\t\tstr.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tstr.push(tag);\n\t\tsetStorage(str);\n\t}\n\n\t// визуализация добавления/удаления тегов для поиска\n\tconst isActive = (tag) => {\n\t\tlet active = false;\n\t\tstorage.forEach(str => {\n\t\t\tif (str === tag) {\n\t\t\t\tactive = true;\n\t\t\t}\n\t\t});\n\t\treturn active;\n\t}\n\n\tconst paginationChange = (newPagination) => {\n\t\tlet count = Math.ceil(page * pagination / newPagination);\n\t\tsetPage(count > maxPage ? maxPage : (count < 1 ? 1 : count));\n\t\tsetPagination(newPagination);\n\t}\n\n\t// localStorage.clear();\n\t// sessionStorage.clear();\n\n\tuseEffect(() => {\n\t\tlocalStorage.clear();\n\t\tsessionStorage.clear();\n\t\tloadPokemons()\n\t\tloadTags()\n\t}, [])\n\n\treturn (\n\t\t<div id=\"background\">\n\t\t\t<div id=\"navigation-bar\">\n\t\t\t\t<div id=\"title\">Pokedex by Vakot</div>\n\t\t\t\t<div id=\"search-block\">\n\t\t\t\t\t<button id=\"search-button\" onClick={() => {\n\t\t\t\t\t\tsessionStorage.clear();\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tsetPage(1);\n\t\t\t\t\t\tvar e = document.getElementById(\"search\");\n\t\t\t\t\t\tsetSearch(e.value);\n\t\t\t\t\t\te.value = \"\";\n\t\t\t\t\t}}></button>\n\t\t\t\t\t<input id=\"search\" type=\"text\" placeholder=\"Search...\"></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"pages\">\n\t\t\t\t<button className=\"page-button s1 prv\"\n\t\t\t\t\tonClick={() => setPage(page-1 < 1 ? 1 : page-1)}>\n\t\t\t\t\t<img className=\"page-img previous\" alt=\"\"/>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"page-button s2 str\"\n\t\t\t\t\tonClick={() => setPage(1)}>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"page-button s3\">{page}</button>\n\t\t\t\t<button className=\"page-button s2 end\"\n\t\t\t\t\tonClick={() => setPage(maxPage())}>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"page-button s1 nxt\"\n\t\t\t\t\tonClick={() => setPage(page+1 > maxPage() ? maxPage() : page+1)}>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div id=\"pagination-buttons\">\n\t\t\t\t<button className=\"pagination-button\" onClick={()=>paginationChange(10)}>10</button>\n\t\t\t\t<button className=\"pagination-button\" onClick={()=>paginationChange(20)}>20</button>\n\t\t\t\t<button className=\"pagination-button\" onClick={()=>paginationChange(50)}>50</button>\n\t\t\t</div>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<Cards pagination={pagination} page={page} pokemons={pokemons} search={search}/>\n\t\t\t</div>\n\n\t\t\t<ul id=\"tags-list\" onClick={forceUpdate}>\n\t\t\t\t{tags.map(tag => \n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={\"tag-button \" + (isActive(tag) ? \"active \" : \" \") + tag}\n\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\tonClick={() => toggleTags(tag)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{tag}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t<li id=\"clear\" className=\"tag-button active\" onClick={() => {\n\t\t\t\t\tsessionStorage.clear();\n\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\tsetStorage([]);\n\t\t\t\t}}></li>\n\t\t\t\t<li id=\"search-by-tag\" className=\"tag-button active\" onClick={() => {\n\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\tsessionStorage.clear();\n\t\t\t\t\tsetSearch('');\n\t\t\t\t\tstorage.forEach(str => {\n\t\t\t\t\t\tsessionStorage.setItem(sessionStorage.length, JSON.stringify(str));\n\t\t\t\t\t});\n\t\t\t\t}}></li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}